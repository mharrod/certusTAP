name: Publish docs (MkDocs)

on:
  push:
    branches: [ "main" ]      # change if your default branch differs
  workflow_dispatch:          # allow manual runs

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write         # required to push to gh-pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pipx install poetry

      - name: Configure Poetry
        run: |
          poetry --version
          poetry config virtualenvs.in-project true
          poetry env use 3.12

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-py312
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
          # ensure mkdocs & material are present (in case theyâ€™re dev-deps or missing)
          poetry run python -c "import mkdocs" 2>/dev/null || poetry run pip install mkdocs
          poetry run python -c "import mkdocs_material" 2>/dev/null || poetry run pip install mkdocs-material

      # If you need to stage any non-Markdown assets into docs/, do it here.
      # - name: Stage extra assets
      #   run: |
      #     mkdir -p docs/framework/ontology
      #     cp framework/ontology/tao-ontology.ttl docs/framework/ontology/

      - name: Build site
        run: poetry run mkdocs build --strict

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./site
          force_orphan: true
          # cname: docs.example.com   # <-- set if you use a custom domain

